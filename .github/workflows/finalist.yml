name: Finalist

on:
  push:
    branches:
      - main
  pull_request:
    branches:
      - main
  workflow_dispatch:
  

jobs:
  build-and-release:
    runs-on: ubuntu-latest

    env:
      GCC_VERSION: "13.3.0"
      HIDDIFY_REPO: "https://github.com/izhdahawrt/hiddify-openwrt.git"
      VERSION: ${{ github.ref_name }}

    strategy:
      matrix:
        target:
          - { platform: "mediatek", subtarget: "filogic", arch: "aarch64_cortex-a53", abi: "musl" }
          - { platform: "ath79", subtarget: "mikrotik", arch: "mips_24kc", abi: "musl" }

    steps:
      - name: Set up environment
        run: |
          sudo apt-get update
          sudo apt-get install -y ack antlr3 asciidoc autoconf automake autopoint bison build-essential \
            bzip2 ccache clang cmake cpio curl device-tree-compiler ecj fastjar file flex gawk gettext \
            gcc-multilib g++ g++-multilib git gnutls-dev gperf haveged help2man intltool lib32gcc-s1 \
            libc6-dev-i386 libelf-dev libfuse-dev libglib2.0-dev libgmp3-dev libltdl-dev libmpc-dev \
            libmpfr-dev libncurses5-dev libncursesw5-dev libpython3-dev libreadline-dev libssl-dev \
            libtool lld llvm lrzsz mkisofs msmtp nano ninja-build p7zip p7zip-full patch pkgconf \
            python3 python3-pip python3-ply python3-docutils python3-pyelftools python3-setuptools \
            qemu-utils re2c rsync scons squashfs-tools subversion swig texinfo uglifyjs upx-ucl unzip \
            vim wget xmlto xxd zlib1g-dev zstd axel

      - name: Check out the repository
        uses: actions/checkout@v2

      - name: Download OpenWrt SDK
        run: |
          SDK_URL="https://downloads.openwrt.org/snapshots/targets/${{ matrix.target.platform }}/${{ matrix.target.subtarget }}/openwrt-sdk-${{ matrix.target.platform }}-${{ matrix.target.subtarget }}_gcc-${{ env.GCC_VERSION }}_${{ matrix.target.abi }}.Linux-x86_64.tar.zst"
          echo "Downloading SDK from: $SDK_URL"
          wget $SDK_URL -O sdk.tar.zst

      - name: Extract SDK
        run: |
          mkdir -p sdk && tar --use-compress-program=unzstd -xf sdk.tar.zst -C sdk --strip-components=1

      - name: Configure SDK and build hiddify-core
        working-directory: sdk
        run: |
          echo "src-git hiddify ${HIDDIFY_REPO}" >> feeds.conf.default
          ./scripts/feeds update -a
          ./scripts/feeds install hiddify-core
          make defconfig
          make package/hiddify-core/compile -j$(nproc)

      - name: Extract PKG_VERSION and PKG_RELEASE
        id: version-info
        working-directory: sdk
        run: |
          PKG_VERSION=$(grep 'PKG_VERSION:=' feeds/hiddify/hiddify-core/Makefile | cut -d '=' -f 2)
          PKG_RELEASE=$(grep 'PKG_RELEASE:=' feeds/hiddify/hiddify-core/Makefile | cut -d '=' -f 2)
          echo "PKG_VERSION=$PKG_VERSION" >> $GITHUB_ENV
          echo "PKG_RELEASE=r$PKG_RELEASE" >> $GITHUB_ENV

      - name: Calculate checksum
        working-directory: sdk
        run: |
          CHECKSUM=$(sha256sum bin/packages/${{ matrix.target.arch }}/hiddify/hiddify-core_${PKG_VERSION}-${PKG_RELEASE}_${{ matrix.target.arch }}.ipk | cut -d ' ' -f 1)
          echo "SHA256 checksum: $CHECKSUM"
          echo "checksum=${CHECKSUM}" >> $GITHUB_ENV

      - name: Upload IPK and checksum as release assets
        uses: actions/upload-artifact@v3
        with:
          name: hiddify-core-${{ matrix.target.platform }}-${{ matrix.target.subtarget }}-${PKG_VERSION}-${PKG_RELEASE}.ipk
          path: |
            hiddify-core_${PKG_VERSION}-${PKG_RELEASE}_${{ matrix.target.arch }}.ipk
            hiddify/hiddify-core_${PKG_VERSION}-${PKG_RELEASE}_${{ matrix.target.arch }}.ipk.sha256sum
